<!-- setup basic html template with metadata etc: -->
<html>
<head>
    <title>Booru | JSCammie.com</title>
    <!-- metadata: -->
    <meta name="description" content="SFW/NSFW Image Booru for JSCammie.com"/>
    <meta name="keywords" content="booru, images, ai generated, sfw, nsfw, suggestive, ai image board"/>
    <meta name="author" content="JSCammie"/>
    <meta name="viewport" content="width=device-width, initial-scale=1.0"/>


    <link rel='stylesheet' href='/style.css'/>
    
    <%- include('../../partials/_headerAll') %>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-K3KJJKS1R4"></script>
    <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'G-K3KJJKS1R4');
    </script>

    <!-- load booruStyle.css -->
    <link rel='stylesheet' href='/booruStyle.css'/>
    
</head>
<body>

    <!-- get partials/_navigation: -->
    <%- include('../../partials/_navigation') %>

    <div class="center-fully-no-flex" style="margin-bottom: 1rem;">
        <%- include('../../partials/_bannerAdvert') %>
    </div>

    <div class="round-frosted page-content" style="padding: 40px; justify-content: center;">

        <div class="searchDiv">
            <div id="searchResultsDiv"></div>
            <input id="searchInput" type="text" placeholder="Search..." style="width: 100%; padding: 10px; border-radius: 10px; margin-bottom: 20px;" />
            <br>
            <select id="searchSorting">
                <option value="votes">Votes</option>
                <option value="recent">Recent</option>
            </select>
            <br>
            <div id="safetyCheckboxes">
                <!-- the user may not have a profile to check against: -->
                <% if (userProfile?.badges?.moderator) { %>
                    <label for="naCheckbox">N/A</label>
                    <input type="checkbox" id="naCheckbox" name="naCheckbox" value="na">
                    <label for="sfwCheckbox">SFW</label>
                    <input type="checkbox" id="sfwCheckbox" name="sfwCheckbox" value="sfw">
                    <br>
                    <label for="suggestiveCheckbox">Suggestive</label>
                    <input type="checkbox" id="suggestiveCheckbox" name="suggestiveCheckbox" value="suggestive">
                    <label for="nsfwCheckbox">NSFW</label>
                    <input type="checkbox" id="nsfwCheckbox" name="nsfwCheckbox" value="nsfw">
                    <label for="extremeCheckbox">EXTREME</label>
                    <input type="checkbox" id="extremeCheckbox" name="extremeCheckbox" value="extreme">
                <% } else { %>
                    <!-- na hidden -->
                    <input type="hidden" id="naCheckbox" name="naCheckbox" value="na">
                    <label for="sfwCheckbox">SFW</label>
                    <input type="checkbox" id="sfwCheckbox" name="sfwCheckbox" value="sfw">
                    <br>
                    <label for="suggestiveCheckbox">Suggestive</label>
                    <input type="checkbox" id="suggestiveCheckbox" name="suggestiveCheckbox" value="suggestive">
                    <label for="nsfwCheckbox">NSFW</label>
                    <input type="checkbox" id="nsfwCheckbox" name="nsfwCheckbox" value="nsfw">
                    <label for="extremeCheckbox">EXTREME</label>
                    <input type="checkbox" id="extremeCheckbox" name="extremeCheckbox" value="extreme">
                <% } %>
            </div>
            <br>
            <button id="searchButton" style="padding: 10px; border-radius: 10px; margin-bottom: 20px;">Search</button>
        </div>

        <script>
            <%- booruSearchScript %>

            booruSearchInitialize()
        </script>

        <style>
            
            /* styling to make the moreInfoDropdown more visually appealing and to give the user(s) feedback */
            .moreInfoDropdown {
                padding: 10px;
                border-radius: 10px;
                margin-bottom: 20px;
                border: 1px solid rgba(100, 100, 255, 0.3);
            }

            .moreInfoDropdown summary {
                cursor: pointer;
                background-color: rgba(100, 100, 255, 0.3);
                border-radius: 10px;
                padding: 4px
            }

            .moreInfoDropdown p {
                margin-top: 10px;
            }

            .moreInfoDropdown:hover {
                background-color: rgba(100, 100, 255, 0.3);
            }
            

        </style>
        
        <h2>User Booru!</h2>
        <details class="moreInfoDropdown">
            <summary>What is this?</summary>
            <p>
                <!-- <p>Here you can view all the images that have been uploaded to the booru!</p>
        <p>Images are sorted by votes by default, but you can change the sorting method using the dropdown above!</p>
        <p>You can upload generated images once you are <a href="/login" target="_blank">logged in</a> either on the <a href="/" target="_blank">Generator itself</a>, or in the <a href="/image-history">Image History</a> page!</p>
        <p>Click on an image to view it in full size!</p> -->
                Here you can view all the images that have been uploaded to the booru!
                <br>
                Images are sorted and filtered by the options above!
                <br>
                Click on an image to view it in full size!
                <br>
                You can upload generated images once you are logged in either on the <a href="/" target="_blank">AI Generator itself</a>, or in the <a href="/image-history">Image History</a> page!
                <% if (userProfile?.accountId) { %>
                    <br>
                    Click the ⬆️ and ⬇️ buttons to upvote and downvote images!
                    <br>
                    Click <a href="/profile/<%=userProfile.accountId%>">here</a> to view your profile!
                <% } %>
            </p>
        </details>
        <br>
        
        <div id="booruPosts" class="booruPostsGrid"></div>
        <div id="pageControls" class="pageControls"></div>

        <script>
            let masterBooruData = {}

            <% booruImages.forEach(image => { %>
                masterBooruData[`<%=image.booru_id%>`] = {
                    booru_id: `<%=image.booru_id%>`,
                    account_id: `<%=image.account_id%>`,
                    image_id: `<%=image.image_id%>`,
                    prompt: `<%=image.prompt%>`,
                    negative_prompt: `<%=image.negative_prompt%>`,
                    model: `<%=image.model%>`,
                    aspect_ratio: `<%=image.aspect_ratio%>`,
                    loras: `<%=image.loras%>`,
                    lora_strengths: `<%=image.lora_strengths%>`,
                    steps: `<%=image.steps%>`,
                    cfg: `<%=image.cfg%>`,
                    seed: `<%=image.seed%>`,
                    content_url: `<%=image.content_url%>`,
                    thumbnailMade: Boolean(<%=image.thumbnailMade%>),
                    timestamp: `<%=image.timestamp%>`,
                    safety: `<%=image.safety%>`,
                    upvotes: <%- JSON.stringify(image.upvotes) %>,
                    downvotes: <%- JSON.stringify(image.downvotes) %>,
                }
            <% }) %>


            var userProfile = {
                accountId: "<%=userProfile?.accountId? userProfile.accountId : ''%>",
                badges: {
                    owner: <%=userProfile?.badges?.owner? userProfile.badges.owner : false%>,
                    moderator: <%=userProfile?.badges?.moderator? userProfile.badges.moderator : false%>
                }
            }

            function setupBooruPosts() {
                let booruPosts = document.getElementById("booruPosts")
                booruPosts.innerHTML = ""

                for (const [key, value] of Object.entries(masterBooruData)) {
                    
                    let newContentUrl = ""

                    if (value.thumbnailMade) {
                        newContentUrl = value.content_url.split(".png")[0] + "-thumb.png"
                    } else {
                        newContentUrl = value.content_url
                    }

                    console.log(newContentUrl)

                    let dropdownHTML = ``

                    console.log(userProfile)

                    if (userProfile.badges.moderator) {
                        dropdownHTML = `
                            <button class="dropdownButton" onclick="document.getElementById('dropdown${value.booru_id}')?.classList.toggle('show')">⋮</button>
                            <div class="dropdown" id="dropdown${value.booru_id}">
                                <a href="/booru/delete/${value.booru_id}">Delete</a>
                                <a href="/booru/setRating/${value.booru_id}/extreme">Set EXTREME</a>
                                <a href="/booru/setRating/${value.booru_id}/nsfw">Set NSFW</a>
                                <a href="/booru/setRating/${value.booru_id}/suggestive">Set Suggestive</a>
                                <a href="/booru/setRating/${value.booru_id}/sfw">Set SFW</a>
                            </div>
                        `
                    }

                    let booruThumbnailHTML = `
                        <img src="${newContentUrl}" alt="Booru Image" style="max-width: 100%;" loading="lazy"/>
                    `

                    let postDiv = ``

                    let moderatorPrompt = ``

                    if (userProfile?.badges?.moderator) { 
                        moderatorPrompt = `
                            <p>Prompt: ${value.prompt}</p>
                            `
                    }


                    if (value.safety == "na" && userProfile.accountId != value.account_id && value.safety == "na" && !userProfile.badges.moderator) {
                        return
                    } else {
                        postDiv = `
                        <div class="booruPost">
                            <p>${value.safety.toUpperCase()}</p>
                            <div class="postButtons">
                                ${dropdownHTML}
                            </div>
                            <a href="/booru/post/${value.booru_id}" target="_blank">
                                ${booruThumbnailHTML}
                            </a>
                            <div class="votesDiv">
                                <button id="upvoteButton${value.booru_id}" onclick="votePost('upvote', '${value.booru_id}')">${value.upvotes.length} ⬆️</button>
                                <button id="downvoteButton${value.booru_id}" onclick="votePost('downvote', '${value.booru_id}')">${value.downvotes.length} ⬇️</button>
                            </div>
                            ${moderatorPrompt}
                                
                        </div>
                    `
                    }
                    // add the post to the grid
                    booruPosts.innerHTML += postDiv
                }

                let pageControls = document.getElementById("pageControls")

                // add pageButtons class to the pageControls div:
                pageControls.classList.add("pageButtons")

                for (let i = 0; i < <%=totalPages%>; i++) {
                    let pageButton = document.createElement("button")
                    pageButton.innerHTML = i + 1
                    pageButton.onclick = () => {
                        // get the current url:
                        let url = window.location.href
                        // replace the number after ?page= with the new page number, keeping the stuff after in unchanged:
                        let newUrl = url.replace(/page=\d+/, `page=${i+1}`)
                        window.location.href = newUrl
                    }
                    pageControls.appendChild(pageButton)
                }

                // give all the buttons the class "pageButtons":
                let pageButtons = document.querySelectorAll(".pageControls button")
                pageButtons.forEach(button => {
                    // if the page param url is the same as the page button, make it have the class active:
                    console.log(`page=${button.innerHTML}`)
                    // split the url on ?page= and check if the number is after it:
                    splitUrl = window.location.href.split("?page=")
                    pageNumber = splitUrl[1].split("&")[0]
                    console.log(pageNumber)
                    if (pageNumber == button.innerHTML) {
                        button.classList.add("active")
                    }

                })

            }

            window.onload = function() {
                setupBooruPosts()
            }

        </script>

    </div>

    <!-- get partials/_footer: -->
    <%- include('../../partials/_footer') %>
    
</body>
</html>