<!-- setup basic html template with metadata etc: -->
<html>
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Browser Game | JSCammie.com</title>
    <meta name="description" content="Play JSCammie's browser-based game! A fun interactive experience built with HTML5 Canvas and JavaScript.">
    <meta name="keywords" content="browser game, html5 game, javascript game, canvas game, online game, interactive">
    <meta name="author" content="JSCammie">
    
    <!-- Open Graph meta tags for social media -->
    <meta property="og:title" content="Browser Game | JSCammie.com">
    <meta property="og:description" content="Play JSCammie's browser-based game! A fun interactive experience built with HTML5 Canvas and JavaScript.">
    <meta property="og:type" content="website">
    <meta property="og:url" content="https://jscammie.com/game">
    <meta property="og:site_name" content="JSCammie.com">
    
    <!-- Twitter Card meta tags -->
    <meta name="twitter:card" content="summary">
    <meta name="twitter:title" content="Browser Game | JSCammie.com">
    <meta name="twitter:description" content="Play JSCammie's browser-based game! A fun interactive experience built with HTML5 Canvas and JavaScript.">
    
    <!-- Canonical URL -->
    <link rel="canonical" href="https://jscammie.com/game">
    
    <link rel='stylesheet' href='/style.css'/>
    
    <%- include('../partials/_headerAll') %>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-K3KJJKS1R4"></script>
    <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());

    gtag('config', 'G-K3KJJKS1R4');
    </script>
    
</head>
<body>

    <!-- get partials/_navigation: -->
    <%- include('../partials/_navigation') %>

    <div class="center-fully-no-flex" style="margin-bottom: 1rem;">
        <%- include('../partials/_bannerAdvert') %>
    </div>

    <div class="round-frosted page-content" style="padding: 40px; justify-content: center;">
        
        <canvas id="gameCanvas">
            <p>Your browser does not support the canvas element.</p>
        </canvas>

        <script>

            const canvas = document.getElementById("gameCanvas");
            const ctx = canvas.getContext("2d");
            canvas.width = 720;
            canvas.height = 720;

            const targetFps = 200;
            const physicsFps = 200;
            const gravity = 0.5;
            const keys = {};

            window.addEventListener("keydown", (e) => (keys[e.key] = true));
            window.addEventListener("keyup", (e) => (keys[e.key] = false));

            class GameObject {
                constructor(id, x, y, width, height, textureSrc = null) {
                    this.id = id;
                    this.x = x;
                    this.y = y;
                    this.width = width;
                    this.height = height;
                    textureSrc = `https://www.jscammie.com/gameFiles/${textureSrc}`
                    console.log(textureSrc);
                    this.texture = textureSrc ? new Image() : null;
                    if (this.texture) this.texture.src = textureSrc;
                }
                draw() {
                    if (this.texture && this.texture.complete) {
                        ctx.drawImage(this.texture, this.x, this.y, this.width, this.height);
                    } else {
                        ctx.fillStyle = "gray";
                        ctx.fillRect(this.x, this.y, this.width, this.height);
                    }
                }
            }

            class Player extends GameObject {
                constructor(x, y) {
                    super("player", x, y, 50, 50, "player.png");
                    this.xVelocity = 0;
                    this.yVelocity = 0;
                    this.rotation = 0;
                }
                update(delta) {
                    this.handleInput();
                    this.x += this.xVelocity * delta;
                    this.y += this.yVelocity * delta;
                    this.applyFriction();
                    this.drawRotated();
                }
                handleInput() {
                    const accel = 5, drag = 2, speedCap = 20;
                    if (keys["w"]) this.yVelocity = Math.max(this.yVelocity - accel, -speedCap);
                    if (keys["s"]) this.yVelocity = Math.min(this.yVelocity + accel, speedCap);
                    if (keys["a"]) this.xVelocity = Math.max(this.xVelocity - accel, -speedCap);
                    if (keys["d"]) this.xVelocity = Math.min(this.xVelocity + accel, speedCap);
                }
                applyFriction() {
                    this.xVelocity *= 0.9;
                    this.yVelocity *= 0.9;
                }
                drawRotated() {
                    ctx.save();
                    ctx.translate(this.x + this.width / 2, this.y + this.height / 2);
                    ctx.rotate(this.rotation);
                    if (this.texture && this.texture.complete) ctx.drawImage(this.texture, -this.width / 2, -this.height / 2, this.width, this.height);
                    else {
                        ctx.fillStyle = "gray";
                        ctx.fillRect(-this.width / 2, -this.height / 2, this.width, this.height);
                    }
                    ctx.restore();
                }
            }

            const objects = [new Player(150, 150), new GameObject("floor", -200, 500, 1000, 400, "floor.png")];
            let lastTime = performance.now();

            function gameLoop(timestamp) {
                const delta = (timestamp - lastTime) / (1000 / physicsFps);
                lastTime = timestamp;
                ctx.clearRect(0, 0, canvas.width, canvas.height);
                objects.forEach(obj => obj.update?.(delta) || obj.draw());
                requestAnimationFrame(gameLoop);
            }

            gameLoop(lastTime);



        </script>

    </div>

    <!-- get partials/_footer: -->
    <%- include('../partials/_footer') %>
    
</body>
</html>