<!-- setup basic html template with metadata etc: -->
<html>
<head>
    <title><%=profileProfile.username%> | JSCammie.com</title>
    <link rel='stylesheet' href='/style.css'/>
    
    <%- include('../partials/_headerAll') %>
    
    <!-- Google tag (gtag.js) -->
    <script async src="https://www.googletagmanager.com/gtag/js?id=G-K3KJJKS1R4"></script>
    <script>
    window.dataLayer = window.dataLayer || [];
    function gtag(){dataLayer.push(arguments);}
    gtag('js', new Date());


    gtag('config', 'G-K3KJJKS1R4');
    </script>

    <!-- load booruStyle.css -->
    <link rel='stylesheet' href='/booruStyle.css'/>
    
</head>
<body>

    <!-- get partials/_navigation: -->
    <%- include('../partials/_navigation') %>

    <div class="center-fully-no-flex" style="margin-bottom: 1rem;">
        <%- include('../partials/_bannerAdvert') %>
    </div>

    <div class="round-frosted page-content mw75-content" style="padding: 40px; justify-content: center;">
    
    <script>
        var masterBooruData = {}

        var profileProfile = {
            accountId: `<%= profileProfile.accountId %>`,
            username: `<%= profileProfile.username %>`,
            profileImg: `<%= profileProfile.profileImg || "https://www.jscammie.com/noimagefound.png" %>`,
            userBio: `<%= profileProfile.settings?.user_bio || "TEST BIO" %>`,
            }

        var userProfile = {
            accountId: `<%= userProfile?.accountId %>`,
            followedAccounts: <%- JSON.stringify(userProfile?.followedAccounts) %>,
            blockedAccounts: <%- JSON.stringify(userProfile?.blockedAccounts) %>,
            }

        <% userBooru.forEach(image => { %>
            masterBooruData[`<%=image.booru_id%>`] = {
                booru_id: `<%=image.booru_id%>`,
                account_id: `<%=image.account_id%>`,
                image_id: `<%=image.image_id%>`,
                prompt: `<%=image.prompt%>`,
                negative_prompt: `<%=image.negative_prompt%>`,
                model: `<%=image.model%>`,
                aspect_ratio: `<%=image.aspect_ratio%>`,
                loras: `<%=image.loras%>`,
                lora_strengths: `<%=image.lora_strengths%>`,
                steps: `<%=image.steps%>`,
                cfg: `<%=image.cfg%>`,
                seed: `<%=image.seed%>`,
                content_url: `<%=image.content_url%>`,
                thumbnailMade: Boolean(<%=image.thumbnailMade%>),
                timestamp: `<%=image.timestamp%>`,
                safety: `<%=image.safety%>`,
                upvotes: `<%= image.upvotes ? image.upvotes.length : 0 %>`,
                downvotes: `<%= image.downvotes ? image.downvotes.length : 0 %>`,
                comments: `<%=image.comments?.length? image.comments.length : 0%>`
            }
        <% }) %>

        // reverse the order of the booru posts
        masterBooruData = Object.fromEntries(Object.entries(masterBooruData).reverse())

        var masterAccountData = {}
        <% booruAccounts.forEach(account => { %>
            masterAccountData[`<%=account.accountId%>`] = {
                accountId: `<%=account.accountId%>`,
                username: `<%=account.username%>`,
                profileImg: `<%=account.profileImg%>`,
                level: `<%=account.level%>`,
            }
        <% }) %>

    </script>

        <div class="searchDiv">
            <div id="searchResultsDiv"></div>
            <input id="searchInput" type="text" placeholder="Search..." style="width: 100%; padding: 10px; border-radius: 10px; margin-bottom: 20px;" />
            <br>
            <select id="searchSorting">
                <option value="trending">üî• Trending</option>
                <option value="votes">‚¨ÜÔ∏è Votes</option>
                <option value="recent">‚è±Ô∏è Recent</option>
            </select>
            <br>
            <div id="safetyCheckboxes">
                <!-- the user may not have a profile to check against: -->
                <% if (userProfile?.badges?.moderator) { %>
                    <label for="naCheckbox">N/A</label>
                    <input type="checkbox" id="naCheckbox" name="naCheckbox" value="na">
                    <label for="sfwCheckbox">SFW</label>
                    <input type="checkbox" id="sfwCheckbox" name="sfwCheckbox" value="sfw">
                    <br>
                    <label for="suggestiveCheckbox">Suggestive</label>
                    <input type="checkbox" id="suggestiveCheckbox" name="suggestiveCheckbox" value="suggestive">
                    <label for="nsfwCheckbox">NSFW</label>
                    <input type="checkbox" id="nsfwCheckbox" name="nsfwCheckbox" value="nsfw">
                    <label for="extremeCheckbox">EXTREME</label>
                    <input type="checkbox" id="extremeCheckbox" name="extremeCheckbox" value="extreme">
                <% } else { %>
                    <!-- na hidden -->
                    <input type="hidden" id="naCheckbox" name="naCheckbox" value="na">
                    <label for="sfwCheckbox">SFW</label>
                    <input type="checkbox" id="sfwCheckbox" name="sfwCheckbox" value="sfw">
                    <br>
                    <label for="suggestiveCheckbox">Suggestive</label>
                    <input type="checkbox" id="suggestiveCheckbox" name="suggestiveCheckbox" value="suggestive">
                    <label for="nsfwCheckbox">NSFW</label>
                    <input type="checkbox" id="nsfwCheckbox" name="nsfwCheckbox" value="nsfw">
                    <label for="extremeCheckbox">EXTREME</label>
                    <input type="checkbox" id="extremeCheckbox" name="extremeCheckbox" value="extreme">
                <% } %>
            </div>
            <br>
            <button id="searchButton" style="padding: 10px; border-radius: 10px; margin-bottom: 20px;">Search</button>
        </div>

        <script>
            <%- booruSearchScript %>

            booruSearchInitialize()
        </script>

        <div id="profileProfileDiv"></div>
        <div id="profileBooruDiv"></div>

    </div>

    <style>
        .profileProfileTop {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 20px;
        }

        .profileProfileInfo {
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
        }
    </style>

    <script>

        async function followAccount(accountId) {
            fetch(`/follow-account/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({accountId: accountId}),
            }).then(response => response.json())
            .then(data => {
                userProfile.followedAccounts = data.followedAccounts
                createProfileTop()
            })
        }

        async function blockAccount(accountId) {
            fetch(`/block-account/`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({accountId: accountId}),
            }).then(response => response.json())
            .then(data => {
                userProfile.blockedAccounts = data.blockedAccounts
                createProfileTop()
            })
        }


        async function createProfileTop() {
        
            let profileProfileDiv = document.getElementById('profileProfileDiv')

            let followButton = null
            let blockButton = null  
            if (userProfile.accountId !== profileProfile.accountId) {
                followButton = document.createElement("button")
                blockButton = document.createElement("button")
            }

            if (userProfile.accountId !== profileProfile.accountId) {
                if (userProfile.followedAccounts.includes(profileProfile.accountId)) {
                    followButton.innerHTML = "Unfollow"
                    followButton.onclick = function() {
                        followAccount(profileProfile.accountId)
                    }
                } else {
                    followButton.innerHTML = "Follow"
                    followButton.onclick = function() {
                        followAccount(profileProfile.accountId)
                    }
                }

                if (userProfile.blockedAccounts.includes(profileProfile.accountId)) {
                    blockButton.innerHTML = "Unblock"
                    blockButton.onclick = function() {
                        blockAccount(profileProfile.accountId)
                    }
                } else {
                    blockButton.innerHTML = "Block"
                    blockButton.onclick = function() {
                        blockAccount(profileProfile.accountId)
                    }
                }
            }

            // clear it:
            profileProfileDiv.innerHTML = "";

            let profileProfileHTML = `
                <div class="profileProfileTop">
                    <div>
                        <img class="profileImage" src="${profileProfile.profileImg}" alt="Profile Image">
                    </div>
                    <div class="profileProfileInfo">
                        <h1>${profileProfile.username}</h1>
                        <p>${profileProfile.userBio}</p>
                        <div id="actionButtons"></div>
                    </div>
                    ${userProfile.accountId === profileProfile.accountId ? `<a href="/settings">Edit Profile</a>` : ""}
                </div>
                <div id="booruPosts" class="booruPostsGrid"></div>
            `;

            profileProfileDiv.innerHTML = profileProfileHTML;

            // Append the buttons programmatically
            const actionButtonsDiv = document.getElementById("actionButtons");

            if (followButton) actionButtonsDiv.appendChild(followButton);
            if (blockButton) actionButtonsDiv.appendChild(blockButton);


            createBooruPosts()

        }

        async function createBooruPosts() {

            let booruPostsDiv = document.getElementById('booruPosts')

            booruPostsDivHTML = ""

            for (const [key, value] of Object.entries(masterBooruData)) {

                // if (value.safety === "na") {
                //     continue
                // }

                let newContentUrl = ""

                if (value.thumbnailMade) {
                    newContentUrl = value.content_url.split(".png")[0] + "-thumb.png"
                } else {
                    newContentUrl = value.content_url
                }

                let booruThumbnailHTML = `
                    <img src="${newContentUrl}" alt="Booru Image" style="max-width: 100%;" loading="lazy"/>
                `

                let postDiv = `
                    <div class="booruPost">
                        <div class="abovePost">
                            <a href="https://www.jscammie.com/profile/${value.account_id}" target="_blank">
                                <img src="${masterAccountData[value.account_id].profileImg}" alt="Profile Image" />
                            </a>
                            <div class="userDetails">
                                <p class="username">${masterAccountData[value.account_id].username}</p>
                                <p class="safety">${value.safety.toUpperCase()}</p>
                            </div>
                        </div>
                        <a href="/booru/post/${value.booru_id}">
                            ${booruThumbnailHTML}
                        </a>
                        <div class="votesDiv">
                            <button id="upvoteButton${value.booru_id}" onclick="votePost('upvote', '${value.booru_id}')">${value.upvotes} ‚¨ÜÔ∏è</button>
                            <button id="commentButton${value.booru_id}" onclick="window.open('/booru/post/${value.booru_id}', '_blank')">${value.comments} üí¨</button>
                            <button id="downvoteButton${value.booru_id}" onclick="votePost('downvote', '${value.booru_id}')">${value.downvotes} ‚¨áÔ∏è</button>
                        </div>
                    </div>
                `
                
                booruPostsDivHTML += postDiv
            }



            booruPostsDiv.innerHTML = booruPostsDivHTML

        }

        createProfileTop()
    
    </script>

    <!-- get partials/_footer: -->
    <%- include('../partials/_footer') %>
    
</body>
</html>