<link rel='stylesheet' href='/style.css' />

<script id="aclib" type="text/javascript" src="//acscdn.com/script/aclib.js"></script>

<style>
    .topNavBar {
        background-color: var(--background-colour);
        color: #fff;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        height: 60px;
        width: 100%;
        position: relative;
        z-index: 100;
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 0px;
        transition: background-color 1s;
    }

    .navContainer {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-wrap: wrap;
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 15px;
    }

    .navLink {
        color: white;
        text-decoration: none;
        font-size: 18px;
        padding: 7px 5px;
        margin: 0 2px;
        border-radius: 4px;
    }

    .navLink:hover {
        background-color: var(--highlight-colour);
    }

    .vertical-line {
        display: none; /* Optional: hide vertical lines */
    }

    @media screen and (max-width: 900px) {
        .navLink {
            font-size: 14px; /* Adjust font size for smaller screens */
            padding: 2px 4px; /* Adjust padding for smaller screens */
        }
        .topNavBar {
            height: 50px; /* Adjusted for smaller screens */
        }
    }

    @media screen and (max-width: 600px) {
        .navLink {
            margin: 0; /* Remove margin for smaller screens */
        }
    }

    #darkModeButton {
        background-color: transparent;
        color: white;
        border: 4px solid rgba(0, 0, 0, 0);
        font-size: 18px;
        padding: 6px;
        margin: 0 5px;
        /* transition border and background-colour: */
        transition: border 1s, background-color 1s;
    }

    @media screen and (max-width: 900px) {
        #darkModeButton {
            font-size: 14px; /* Adjust font size for smaller screens */
            padding: 1px
        }
        
    }

    #darkModeButton:hover {
        border: 4px solid var(--highlight-colour);
        transition: border 1s, background-color 1s;
    }
</style>

<nav class="topNavBar">
    <div class="navContainer">
        <a href="/home" class="navLink">üè†</a>
        <a href="/projects" class="navLink">Projects</a>
        <a href="/" class="navLink">Generate</a>
        <a href="https://ko-fi.com/jscammie" class="navLink">Donate</a>
        <% if (session.loggedIn) { %>
            <a href="/logout" class="navLink">Logout</a>
        <% } else { %>
            <a href="/login" class="navLink">Login</a>
        <% } %>
        <a href="https://discord.gg/AvbQuRmh7t" class="navLink">Discord</a>
        <!-- darkmode button & emoji that toggles, also make it stuck to the right: -->
        <button id="darkModeButton" class="navLink" style="margin-left: auto;">
            <span id="darkModeIcon">üåô</span>
        </button>
        <button id="creditsNav">üíé <a id="creditsDisplay" style="transition: all 1s;">0</a></button>
    </div>
</nav>

<div id="creditsDailyPopup" style="display: none;">
    <button id="3hrCreditsButton"><a id="3hrCreditsButtonTimeLeft"></a>/3hr</button>
    <button id="12hrCreditsButton"><a id="12hrCreditsButtonTimeLeft"></a>/12hr</button>
</div>


<style>
    #creditsDailyPopup {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: var(--background-colour);
        color: white;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3);
        z-index: 1000;
    }

    #creditsDailyPopup button {
        background-color: var(--highlight-colour);
        color: white;
        padding: 10px;
        margin: 5px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
    }

    #creditsDailyPopup button:hover {
        background-color: var(--highlight-colour-hover);
    }

    #creditsDailyPopup button:active {
        background-color: var(--highlight-colour-active);
    }

    #creditsDailyPopup button:disabled {
        background-color: var(--highlight-colour-disabled);
    }

    #creditsDailyPopup button:disabled:hover {
        background-color: var(--highlight-colour-disabled);
    }

    #creditsDailyPopup button:disabled:active {
        background-color: var(--highlight-colour-disabled);
    }
</style>

<script>

    // when the creditsNav button is clicked, show the creditsDailyPopup: on the center of the screen:
    document.getElementById('creditsNav').addEventListener('click', () => {
        if (document.getElementById('creditsDailyPopup').style.display == 'none') {
            document.getElementById('creditsDailyPopup').style.display = 'block';
        } else {
            document.getElementById('creditsDailyPopup').style.display = 'none';
        }
    });
</script>

<script>
    const creditsDisplay = document.getElementById('creditsDisplay');

    // every .1 seconds, check if the creditsDisplay value is higher or lower than the previous value:
    // the credits display is updated by other scripts:
    let previousCredits = 0;
    let currentCredits = 0;
    setInterval(() => {
        currentCredits = parseInt(creditsDisplay.textContent);
        if (currentCredits > previousCredits) {
            creditsDisplay.style.color = 'green';
            setTimeout(() => {
                creditsDisplay.style.color = 'white';
            }, 1000);
        } else if (currentCredits < previousCredits) {
            creditsDisplay.style.color = 'red';
            setTimeout(() => {
                creditsDisplay.style.color = 'white';
            }, 1000);
        }
        previousCredits = currentCredits;
    }, 100);
</script>

<script>

    function sendDailiesRequest(type) {
        // make a request to post /dailies:
        fetch('/dailies', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                type: type
            })
        }).then(response => response.json())
            .then(data => {
                console.log(data);
            });
        updateUserProfile()
    }

    document.getElementById('3hrCreditsButton').addEventListener('click', () => {
        sendDailiesRequest('3hr');
    });

    document.getElementById('12hrCreditsButton').addEventListener('click', () => {
        sendDailiesRequest('12hr');
    });


    function updateUserProfile() {
        fetch('/userProfile', {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json'
            }
        }).then(response => response.json())
            .then(data => {
                document.getElementById('creditsDisplay').textContent = data.credits;
            });
    }

    updateUserProfile()
    setInterval(() => {
        updateUserProfile()
    }, 5000);
</script>

<div class="center-fully-no-flex round-frosted" style="padding: 4px; border: none !important; border-radius: 0px !important;">
    <p>Checkout the contests on <a href="https://discord.gg/AvbQuRmh7t">Discord</a> to win a FastPass! </p>
</div>

<!-- script to enable darkmode, change how a button looks with emoji on the navigation -->
<script>
    const darkModeButton = document.getElementById('darkModeButton');
    const darkModeIcon = document.getElementById('darkModeIcon');

    function toggleDarkMode(darkmodeStatus) {
        console.log(darkmodeStatus + " darkmodeStatus")
        if (darkmodeStatus == "false") {
            document.body.classList.remove('dark');
            document.getElementsByClassName('topNavBar')[0].classList.remove('dark');
            darkModeIcon.textContent = '‚òÄÔ∏è';
        } if (darkmodeStatus == "true") {
            document.body.classList.add('dark');
            document.getElementsByClassName('topNavBar')[0].classList.add('dark');
            darkModeIcon.textContent = 'üåô';
        }
    }



    darkModeButton.addEventListener('click', () => {
        fetch('/toggle-darkmode', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({
                    darkmode: true
                })
            });
        if (document.body.classList.contains('dark')) {
            toggleDarkMode("false")
        } else {
            toggleDarkMode("true")
        }
    });

</script>

<% if (session.darkmode == true) { %>
    <span hidden id="isDarkMode">true</span>
<% } if (session.darkmode == false) { %>
    <span hidden id="isDarkMode">false</span>
<% } %>

<script>
    
    document.addEventListener('DOMContentLoaded', (event) => {
        // Temporarily disable transitions
        document.body.classList.add('no-transition');
        document.getElementsByClassName('topNavBar')[0].classList.add('no-transition');

        const isDarkMode = document.getElementById('isDarkMode').textContent
        toggleDarkMode(isDarkMode); // Assuming toggleDarkMode is a function that correctly toggles the dark mode.

        // Use setTimeout to delay the removal of 'no-transition', allowing changes to apply without transition
        setTimeout(() => {
            document.body.classList.remove('no-transition');
            document.getElementsByClassName('topNavBar')[0].classList.remove('no-transition');
        }, 50); // 50 milliseconds is usually enough, but this can be adjusted as needed
    });

</script>