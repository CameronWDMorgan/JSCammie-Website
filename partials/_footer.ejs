<link rel='stylesheet' href='/style.css?v=<%= version %>' />
<style>
    .footerBar {
        background-color: #333;
        color: #fff;
        text-align: center;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.3);
        padding: 20px 0; /* Increased vertical padding */
        margin-bottom: 0;
        position: relative;
        width: 100%;
    }

    .footerContainer {
        display: flex;
        justify-content: center; /* Center items */
        align-items: center;
        flex-wrap: wrap; /* Wrap items on smaller screens */
        max-width: 1200px;
        margin: 0 auto; /* Center container */
        padding: 0 15px; /* Padding on the sides */
    }

    .footerLink {
        color: white;
        text-decoration: none;
        font-size: 18px;
        padding: 5px 10px; /* Increased vertical padding */
        border-radius: 4px;
        margin: 0 10px; /* Space between items */
    }

    .footerLink:hover {
        background-color: var(--highlight-colour);
    }

    .vertical-line {
        height: 30px;
        width: 3px;
        background-color: #f1f1f1;
    }

    @media screen and (max-width: 900px) {
        .footerLink {
            font-size: 14px; /* Adjust font size for smaller screens */
            padding: 8px 16px; /* Adjust padding for smaller screens */
        }
    }
</style>

<div style="height: 6rem;"></div>

<footer id="footerBar" class="footerBar">
    <div class="footerContainer">
        <a href="javascript: void(0);" onclick="hardRefresh(event)" class="footerLink">ðŸ”„ Hard Refresh</a>
        <div class="vertical-line"></div>
        <a href="/contact" class="footerLink">Contact</a>
        <div class="vertical-line"></div>
        <a href="/privacypolicy" class="footerLink">Privacy Policy</a>
    </div>
</footer>

<script>
async function hardRefresh(event) {
    // Ensure we have a target element
    const targetElement = event?.target || document.querySelector('.footerLink[onclick*="hardRefresh"]');
    if (!targetElement) {
        console.error('Could not find target element for hard refresh');
        // Fallback to immediate refresh
        window.location.href = window.location.protocol + '//' + window.location.host + window.location.pathname + '?_refresh=' + Date.now();
        return;
    }
    
    // Show loading indicator
    const originalText = targetElement.textContent;
    targetElement.textContent = 'ðŸ”„ Clearing...';
    targetElement.style.pointerEvents = 'none';
    
    try {
        // Clear service worker caches if available
        if (typeof window.clearAllCaches === 'function') {
            await window.clearAllCaches();
        }
        
        // Clear all browser caches
        if ('caches' in window) {
            const cacheNames = await caches.keys();
            await Promise.all(cacheNames.map(name => caches.delete(name)));
        }
        
        // Clear local/session storage
        if (typeof(Storage) !== "undefined") {
            localStorage.clear();
            sessionStorage.clear();
        }
        
        // Unregister service workers
        if ('serviceWorker' in navigator) {
            const registrations = await navigator.serviceWorker.getRegistrations();
            await Promise.all(registrations.map(registration => registration.unregister()));
        }
        
        targetElement.textContent = 'âœ… Refreshing...';
        
        // Force reload with cache bypass
        setTimeout(() => {
            window.location.href = window.location.protocol + '//' + window.location.host + window.location.pathname + '?_refresh=' + Date.now();
        }, 500);
        
    } catch (error) {
        console.error('Hard refresh error:', error);
        targetElement.textContent = originalText;
        targetElement.style.pointerEvents = 'auto';
        
        // Ultimate fallback
        window.location.href = window.location.protocol + '//' + window.location.host + window.location.pathname + '?_refresh=' + Date.now();
    }
}
</script>
